 
modparam("htable", "htable", "maliciousMap=>size=12;autoexpire=HTABLE_AUTOEXPIRE")

route[MALICIOUS] {
	if (is_method("INVITE|REGISTER|OPTIONS")) {
		if ($au != $null) $var(aNumber) = $au;
		else $var(aNumber) = $fU;

		if ($rU != $null) $var(bNumber) = $rU;
		else $var(bNumber) = $tU;

		if ($ua =~ "(sundayddr|SIPScan|smap|pplsip|hamdan|Ozeki|Conaito|eyeBeam|friendly-scanner|sipvicious|sipcli|VaxSIPUserAgent)") {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}

		/* Uncomment the blocks you need */

		/*
		if (starts_with("$var(aNumber)", "+204231")) {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

		/*
		if (starts_with("$var(bNumber)", "+204231")) {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

		/*
		if ($var(aNumber) =~ "(\$)|(\-)|(\=)|(\#)|(\%27)|(\%24)|(\/)") {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

		/*
		if (!($var(aNumber) =~ "^([0-9]+)$") && !($var(aNumber) =~ "^(\+[0-9]+)$") && !($var(aNumber) == "anonymous") && !is_method("OPTIONS")) {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

		/*
		# comment this out if you have alphanumeric hostnames
		if (!($sel(contact.uri.host) =~ "^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})$") && $ct != $null) {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

		/*
		# last $si should be your loadbalancer ip to avoid false warnings
		if ($sel(contact.uri.host) != $si && $ct != $null && $si != "172.17.64.141") {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/
		
		/*
		if ($(hdr(Record-Route)[0]{nameaddr.uri}) != $si && $hdr(Record-Route) != $null) {
			$var(malicious) = $_s($ua::$var(aNumber)::$var(bNumber)::$si::$sel(via[1].host));
			if ($sht(maliciousMap=>$var(malicious)) == $null) $sht(maliciousMap=>$var(malicious)) = 0;
			$sht(maliciousMap=>$var(malicious)) = $sht(maliciousMap=>$var(malicious)) + 1;
		}
		*/

	}
}

route[STATS_MALICIOUS] {
	$var(stats_elastic)  = "";
	$var(stats_influxdb) = "";
	$var(type) = "stats_malicious";

	sht_iterator_start("i1", "maliciousMap");
	while (sht_iterator_next("i1")) {
		$var(useragent) = $(shtitkey(i1){s.select,0,:});
		$var(from)      = $(shtitkey(i1){s.select,2,:});
		$var(to)        = $(shtitkey(i1){s.select,4,:});
		$var(inip)      = $(shtitkey(i1){s.select,6,:});
		$var(outip)     = $(shtitkey(i1){s.select,8,:});
		$var(value)     = $shtitval(i1);

		jansson_set("string",  "host", "$var(host)", "$var(tmp_json)");
		jansson_set("string",  "useragent", "$var(useragent)", "$var(tmp_json)");
		jansson_set("string",  "from", "$var(from)", "$var(tmp_json)");
		jansson_set("string",  "to", "$var(to)", "$var(tmp_json)");
		jansson_set("string",  "srcIP", "$var(inip)", "$var(tmp_json)");
		jansson_set("string",  "dstIP", "$var(outip)", "$var(tmp_json)");
		jansson_set("integer", "value", "$var(value)", "$var(tmp_json)");

		#!ifdef DO_ELASTICSEARCH
		jansson_set("string", "timestamp", "$var(elasticTime)", "$var(tmp_json)");
		$var(stats_elastic) = $var(stats_elastic) + " {\"index\": {\"_index\":\"homer-"+ $timef(%d.%m.%Y) +"\",\"_type\":\""+$var(type)+"\" }}\n";
		$var(stats_elastic) = $var(stats_elastic) + $var(tmp_json) + "\n";
		#!endif

		#!ifdef DO_GRAYLOG
		jansson_set("real", "timestamp", "$var(graylogTime)", "$var(tmp_json)");
		jansson_set("string", "short_message", "$var(type)", "$var(tmp_json)");
		$var(graylog_body) = $var(tmp_json);
		route(HTTP_POST);
		#!endif

		#!ifdef DO_INFLUXDB
		$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost),useragent=$var(useragent) );
		$var(stats_influxdb) = $_s($var(stats_influxdb)from="$var(from)",to="$var(to)",srcIP="$var(inip)",dstIP="$var(outip)",value=$var(value) $var(influxdbTime)) + "\n";
		#!endif

		$var(tmp_json) = 0;
		$var(graylog_body) = "";
	}
	sht_iterator_end("i1");
	sht_rm_name_re("maliciousMap=>.*");

	$var(elasticsearch_body) = $var(stats_elastic);
	$var(influxdb_body) = $var(stats_influxdb);

	$var(bulk) = 1;
	route(HTTP_POST);
	$var(bulk) = 0;
}